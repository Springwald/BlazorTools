<button type="button" class="@ButtonClass" title="@Title" @onclick="buttonClicked">
    <span> <i class="@IconClass"> </i> </span>
    @if (!string.IsNullOrWhiteSpace(ButtonText))
    {
        <span>@ButtonText</span>
    }
</button>

@if (dialogVisible)
{
    <div class="modal @modalClass" tabindex="-1" role="dialog" style="display: @(dialogVisible ? "block" : "none")">
        <div class="modal-dialog modal-sm" role="document">
            <div class="modal-content">
                @if (!string.IsNullOrWhiteSpace(ConfirmHeader))
                {
                    <div class="modal-header">
                        <h4 class="box-title">@ConfirmHeader</h4>
                    </div>
                }
                <div class="modal-body">
                    @ChildContent
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" @onclick="@(() => OnClickOk.InvokeAsync(EventArgs.Empty))">@OkButtonText</button>
                    <button type="button" class="btn btn-secondary" @onclick="hideModalDialog">@CancelButtonText</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal-backdrop fade show"></div>
}

@code {
    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public string ButtonText { get; set; }

    [Parameter]
    public string OkButtonText { get; set; } = "OK";

    [Parameter]
    public string CancelButtonText { get; set; } = "Cancel";

    [Parameter]
    public string ConfirmHeader { get; set; }

    [Parameter]
    public string ButtonClass { get; set; }

    [Parameter]
    public string IconClass { get; set; }

    [Parameter]
    public string ConfirmQuestion { get; set; }

    [Parameter] public EventCallback OnClickOk { get; set; }
    [Parameter] public EventCallback OnClickCancel { get; set; }


    public void Hide()
    {
        this.hideModalDialog();
    }

    private bool dialogVisible;
    private string modalClass;

    private void buttonClicked()
    {
        this.showModalDialog();
    }
    private void showModalDialog()
    {
        this.dialogVisible = true;
        this.modalClass = "show";
        StateHasChanged();
    }

    private void  hideModalDialog()
    {
        this.dialogVisible = false;
        this.modalClass = "";
        StateHasChanged();
    }
}

<div class="card @(Mini? "mini": "" ) @Class @(HundredPercentHeight ? "hundredPercentHeight": "")" style="@this.Style">
    <div class="card-header ">
        <div style="float: left;" @onclick="(e) => { if (this.Collapsable) { this.Collapsed = !this.Collapsed; } }">
            @if (!string.IsNullOrWhiteSpace(Title))
            {
                <span class="title">@Title</span>
            }
            @if (Header != null)
            {
                @Header
            }
        </div>
        <div style="float: right;">
            @if (this.Collapsable || this.Collapsed)
            {

                <button class="btn btn-light btn-sm collapseBtn" @onclick="e => this.Collapsed = !this.Collapsed">
                    <i class="oi @(this.Collapsed ? "oi-plus" : "oi-minus")" aria-hidden="true"></i>
                </button>
            }
            @HeaderButtons
        </div>
    </div>

    <div class="card-body overflow-auto @(Collapsed? "collapse": "" )">
        @ChildContent
    </div> 

    @if (Footer != null)
    {
        <div class="card-footer text-muted">
            @Footer
        </div>
    }
</div>

@code {

    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public bool Collapsable { get; set; }

    [Parameter]
    public bool Collapsed { get; set; }

    [Parameter]
    public bool HundredPercentHeight { get; set; }

    [Parameter]
    public bool Mini { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public RenderFragment Header { get; set; }

    [Parameter]
    public RenderFragment HeaderButtons { get; set; }

    [Parameter]
    public RenderFragment Footer { get; set; }

    [Parameter]
    public string Style { get; set; }

    [Parameter]
    public string Class { get; set; }

}
